# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelPackages = pkgs.linuxPackages_latest;
  boot.kernelModules = [ "kvm-amd" ];
  boot.kernel.sysctl = {
    # optimize swap on zram
    # https://wiki.archlinux.org/title/Zram#Optimizing_swap_on_zram
    "vm.swappiness" = 180;
    "vm.watermark_boost_factor" = 0;
    "vm.watermark_scale_factor" = 125;
    "vm.page-cluster" = 0;
  };
  boot.extraModulePackages = [ ];

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-label/NIXROOT";
      fsType = "ext4";
    };
    "/boot" = {
      device = "/dev/disk/by-label/NIXBOOT";
      fsType = "vfat";
    };
    "/mnt/media" = {
      device = "/dev/disk/by-label/Media";
      fsType = "ntfs";
      options = [
        "uid=1000"
        "gid=100"
	"nofail"
      ];
    };
    "/home/hyshka/storage" = {
      device = "hyshka@10.0.0.250:/mnt/storage";
      fsType = "fuse.sshfs";
      options = [
        "noauto"
	#"x-systemd.automount" # to mount on-demand
	"_netdev"
	"users"
	"idmap=user"
	"IdentityFile=/home/hyshka/.ssh/id_rsa"
	"allow_other"
	"reconnect"
	"port=38000"
      ];
    };
  };

  swapDevices = [ {
    device = "/var/lib/swapfile";
    size = 6*1024; # https://itsfoss.com/swap-size/
    priority = 1; # needs to be lower than the default zram priority of 5
  } ];
  zramSwap.enable = true;



  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
